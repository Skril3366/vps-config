---
- name: Create monitoring directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ prometheus_directory }}"
    - "{{ grafana_data_directory }}"
    - "{{ loki_directory }}"
    - "{{ promtail_directory }}"

- name: Set Grafana directory ownership
  file:
    path: "{{ grafana_data_directory }}"
    owner: "472"
    group: "472"
    recurse: yes

- name: Generate Prometheus config
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_directory }}/prometheus.yml"
    mode: '0644'

- name: Generate Loki config
  template:
    src: loki.yml.j2
    dest: "{{ loki_directory }}/loki.yml"
    mode: '0644'

- name: Generate Promtail config
  template:
    src: promtail.yml.j2
    dest: "{{ promtail_directory }}/promtail.yml"
    mode: '0644'

- name: Start Node Exporter container
  docker_container:
    name: node_exporter
    image: "{{ node_exporter_image }}"
    state: started
    restart_policy: unless-stopped
    ports:
      - "{{ node_exporter_port }}:9100"
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'

- name: Start Prometheus container
  docker_container:
    name: prometheus
    image: "{{ prometheus_image }}"
    state: started
    restart_policy: unless-stopped
    ports:
      - "{{ prometheus_port }}:9090"
    volumes:
      - "{{ prometheus_directory }}/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time={{ prometheus_retention_time }}'
      # Enable external URL and route prefix for reverse proxy
      - '--web.external-url=https://prometheus.{{ domain_name }}'
      - '--web.route-prefix=/'

- name: Start Grafana container
  docker_container:
    name: grafana
    image: "{{ grafana_image }}"
    state: started
    restart_policy: unless-stopped
    ports:
      - "{{ grafana_port }}:3000"
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"
      # Forward authentication configuration
      GF_AUTH_PROXY_ENABLED: "true"
      GF_AUTH_PROXY_HEADER_NAME: "Remote-User"
      GF_AUTH_PROXY_HEADER_PROPERTY: "username"
      GF_AUTH_PROXY_AUTO_SIGN_UP: "true"
      GF_AUTH_PROXY_ENABLE_LOGIN_TOKEN: "false"
      # Additional user info headers
      GF_AUTH_PROXY_HEADERS: "Name:Remote-Name Email:Remote-Email Groups:Remote-Groups"
      # Security settings
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_USERS_AUTO_ASSIGN_ORG: "true"
      GF_USERS_AUTO_ASSIGN_ORG_ID: "1"
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: "Admin"
    volumes:
      - "{{ grafana_data_directory }}:/var/lib/grafana"

- name: Start Loki container
  docker_container:
    name: loki
    image: "{{ loki_image }}"
    state: started
    restart_policy: unless-stopped
    ports:
      - "{{ loki_port }}:3100"
    volumes:
      - "{{ loki_directory }}/loki.yml:/etc/loki/local-config.yaml"
    command: 
      - -config.file=/etc/loki/local-config.yaml
      # Configure for reverse proxy
      - -server.path-prefix=/

- name: Start Promtail container
  docker_container:
    name: promtail
    image: "{{ promtail_image }}"
    state: started
    restart_policy: unless-stopped
    volumes:
      - "{{ promtail_directory }}/promtail.yml:/etc/promtail/config.yml"
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml